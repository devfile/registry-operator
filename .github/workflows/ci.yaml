#
# Copyright Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Validate PRs

on:
  pull_request:
    branches: [main]

jobs:
  go:
    name: Check go sources
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Set up Go 1.x
        uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version-file: "go.mod"
      - name: Cache go modules
        id: cache-mod
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Download dependencies
        run: go mod download
        if: steps.cache-mod.outputs.cache-hit != 'true'
      - name: Check go mod status
        run: |
          go mod tidy
          if [[ ! -z $(git status -s) ]]
          then
            echo "Go mod state is not clean: $(git status -s)"
            exit 1
          fi
      - name: Check format
        run: |
          go get github.com/google/addlicense@v1.1.1
          go install github.com/google/addlicense@v1.1.1
          go get golang.org/x/tools/cmd/goimports@v0.24.0
          go install golang.org/x/tools/cmd/goimports@v0.24.0
          git reset HEAD --hard

          make fmt
          if [[ ! -z $(git status -s) ]]
          then
            echo "not well formatted sources found during make fmt: $(git --no-pager diff)"
            exit 1
          fi

          make fmt_license
          if [[ ! -z $(git status -s) ]]
          then
            echo "not well formatted sources found during make fmt_license: $(git status -s)"
            exit 1
          fi
      - name: Check code generation
        run: make generate
      - name: Check CRD manifest generation
        run: make manifests
      - name: Run unit tests
        run: make test
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4

      - name: Run Gosec Security Scanner
        run: |
          go install github.com/securego/gosec/v2/cmd/gosec@1af1d5bb49259b62e45c505db397dd2ada5d74f8
          make gosec
          if [[ $? != 0 ]]
          then
            echo "gosec scanner failed to run "
            exit 1
          fi

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@74483a38d39275f33fcff5f35b679b5ca4a26a99 # 2.22.5
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: gosec.sarif

  operator-build:
    name: Check operator container image build
    runs-on: ubuntu-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up QEMU # Enables arm64 image building
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 #v3.0.0

      - name: Check if operator docker build is working
        run: make docker-buildx-build

  operator-bundle-build:
    name: Check operator bundle build
    runs-on: ubuntu-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up QEMU # Enables arm64 image building
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 #v3.0.0

      - name: Build the operator's bundle image
        run: make docker-bundle-buildx-build
